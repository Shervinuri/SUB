# نام ورک‌فلو
name: Shen V2Ray Collector

on:
  # به شما اجازه می‌دهد این ورک‌فلو را به صورت دستی از تب Actions در گیت‌هاب اجرا کنید
  workflow_dispatch:

  # اجرای زمان‌بندی شده
  schedule:
    # این دستور هر 6 ساعت یک‌بار ورک‌فلو را اجرا می‌کند
    # برای تغییر زمان‌بندی، از سایت crontab.guru کمک بگیرید
    - cron: "0 */6 * * *"

jobs:
  build:
    # استفاده از آخرین نسخه اوبونتو برای اجرای عملیات
    runs-on: ubuntu-latest

    steps:
      # مرحله ۱: دریافت کد از ریپازیتوری شما
      - name: Checkout Repository
        uses: actions/checkout@v3

      # مرحله ۲: آماده‌سازی محیط پایتون
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          # کش کردن پکیج‌ها برای افزایش سرعت در اجراهای بعدی
          cache: "pip"

      # مرحله ۳: نصب کتابخانه‌های مورد نیاز پایتون
      - name: Install Dependencies
        run: pip install requests pyyaml

      # مرحله ۴: دانلود ابزارهای لازم (Subconverter و Clash)
      - name: Download Essential Tools
        run: |
          # دانلود و آماده‌سازی Subconverter برای تبدیل لینک‌ها
          wget -O subconverter.tar.gz https://github.com/tindy2013/subconverter/releases/download/v0.8.0/subconverter_linux64.tar.gz
          tar -zxvf subconverter.tar.gz
          chmod +x ./subconverter/subconverter

          # دانلود و آماده‌سازی Clash Core برای تست سرعت و سلامت کانفیگ‌ها
          wget -O clash.gz https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-linux-amd64-v3-v1.18.0.gz
          gzip -d clash.gz
          chmod +x ./clash

      # مرحله ۵: اجرای اسکریپت اصلی پایتون
      - name: Run The Collector Script
        id: run_script # به این مرحله یک شناسه می‌دهیم تا از خروجی آن استفاده کنیم
        run: python process_subs.py

      # مرحله ۶: ذخیره و ارسال (Commit & Push) نتایج به ریپازیتوری
      - name: Commit and Push Results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pure.md
          # استفاده از خروجی اسکریپت پایتون برای ایجاد یک پیام کامیت داینامیک
          git commit -m "✨ SHEN Collector Update | Found ${{ steps.run_script.outputs.node_count }} premium nodes" || echo "No changes to commit"
          git push
